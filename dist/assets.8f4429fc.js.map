{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","mute","unmute","AutoPlay","AutoPause","constructor","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","visibilityState","video","querySelector","button","onclick","muteBtn","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;;AACA;;AACA;AHDA,AEDA,ADAA,MCAMoB,GFCGpB,ACDAmB,MCAT,CAAgB,CDAhB,GDCA,ACDoB,CDCClB,ACDC,MDCtB,EAA6B;AACzB,AEDAoB,EAAAA,KFCKnB,KAAL,CEDW,EFCED,CEDC,KFCK,CAACE,EAApB;AACA,AEDI,ADDNgB,ODEOf,CCFC,CCCGkB,ADDFhB,KDEP,GAAeL,CEDX,ADDN,CAAmBa,ECCI,CDDvB,CDEuB,CAACV,CEDlB,ADDmB,MDER,IAAkB,ACFAG,EDEjC,ICFuB,EAAkB;AEG7C,ADDQ,ADDJ,MEEE6B,AFFC,CAAC7B,ECCKgB,ECCF,EFFG,CEEAM,AFFCnB,KAAX,EAAkB,CEEA,CAAC2B,IDDf,GAA0B,KAAKd,CCCzB,CAAuB,OAAvB,CAAd,QDDkC,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AFEJ,AGAJ,ADDQ,ADDFjB,IAAAA,EEEAA,CHAGF,EEDIoB,CDDD,CAACf,CEED,GAAG,CFFT,GDEF,AGAeV,AFFE,IAAf,QCCE,GAA8B,KCCvB,ADD4ByB,CCCZ,qBDDO,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AFEP,AGAErB,ADDE,ADDA,EEEFA,EAAE,EAAEiC,KADwB;AAE5BhC,EAAAA,OAAO,EAAE,CAAC,IAAIe,iBAAJ,EAAD,EAAiB,IAAIC,kBAAJ,EAAjB;AHCZpB,AGH+B,ADC5Bc,ADDCP,CEAW,CAAf,ADCGO,ADDCP,GCCE,CAACA,EDDG,CAACC,EDGA,CAACF,AEFN,CDDF,CCCW,OFEf,CAAsBD,YAAtB,GAAqC,YAAW;AAC5C,AGCJ,ADHO,ADDJ,CALD,KESIiC,EHDI/B,CEFEA,GCGA,EHDI,CGCDsB,ADHR,EFEY,CEFEtB,KCGE,CAAC8B,ADHjB,aCGQ,CAAuB,UAAvB,CAAf;AHAQ7B,AEFD,IFECA,IAAI,EAAE,AEFDkB,MFEO,EEFC,GFEIlB,AEFD,IFEJ,AEFQmB,EFCT,kBEDK,CAAyB,KAAKJ,kBAA9B,EAAkD;AFGlEd,AGAR6B,ADFQhB,IFEAb,EGAF,ADFEa,CCEDiB,EHAM,EAAE,GGAf,CDFiB,ADDApB,EDGI,AGAJ,ADFE,KFEOV,AEFFa,CCEDf,IHAF,EAFF,AGEU,CAACQ,UAAP,EAAvB;AHCQb,AEJkE,IFIlEA,CEJgB,CAAjB,GFIM,EAAE,KAAKA,KAHD;AGInB,ADDOwB,IAAAA,ECCDc,MDDS,CCCF,ADDGZ,GCCAC,IDDT,CAAiB,GCCA,CAACQ,CDDI9B,MAAL,CAAYL,KCCpB,ADDT,CCCgC,UAAvB,CAAhB;AHAO,AEAA2B,IAAAA,IFAInB,IEAI,CFAR,AEASoB,GFAG,aEAZ,CAA0B,kBAA1B,EAA8C,KAAKL,sBAAnD;AFCI,AGAXe,ADAI,OCAG,CAACD,KHAU,EGAlB,GHAuBrC,AGAL,KHAA,CAAWQ,AGAL,KHAb;AACH,AGAJ,KHNe,CGMXH,MAAM,CAACL,KAAP,CAAaQ,KAAjB,EAAwB;AACpBH,ADALgB,EAAAA,ECAKhB,MAAM,CAACW,MAAP,GDAa,CAACa,OAAD,EAAU;AFAvB,AGCD,ADAA,GCFH,KHCQrB,CGCC,CDAAsB,GFDL,CAAUrB,CECA,GAAGoB,CFDb,EAAiB,IECG,CAAC,CAAD,CAArB;AFAK,AGCJxB,ADAD,ICACA,MAAM,ADAD0B,CFDI/B,AGCFe,IAAP,CHDI,CAAWP,EECD,GFDV,AECasB,GFDMrB,EECD,CAACuB,EFDnB,eECa,IAA2B,KAAKZ,SAAlD;AFAE,AGCF;AACN,ADDI,CCLL,ODKQW,SAAH,EAAc;AFVA,AEWX,GFXJ,QEWS1B,MAAL,CAAYC,IAAZ;AFCJ,AGCJ,ADDM,ICCF,CDHC,EFEIJ,IEAG,GFAR,CAAaQ,OAAb,CAAqBC,AGCF4B,MHDQ,GGC/B,CHDmC,CGCD;AHA1B5B,AGCN4B,ADDM,ECCNA,EHDM5B,MAAM,CAACC,AGCJ,ADDEP,CCCDmC,EHDJ,CAAWnC,EEAX,CAAYE,GFAZ,EEAA,ECCN,CAAwBkC,QAAxB,CAAiC,sCAAjC,EAA2CC,KAA3C,CAAiDC,KAAK,IAAI;AHAvD,AGCDC,ADDE,GFFF,CGGAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AHAH,AGCE,ADAC,CFjBJ,EGeE;AAGD;AHADhD,AECGyB,EAAAA,SFDQ,CAACnB,SAAZ,CAAsBE,EECG,EFDzB,CEC2B,EFDE,YAAW;AACpC,AECG,OFDEN,GECI+B,EFDT,CAAWzB,IAAX,EECkB,GAAGqB,QAAQ,CAACM,eAAT,KAA6B,SAA/C;AFAN,CAFD;AEGO,QAAGF,SAAH,EAAa;AFCpBjC,AEAW,WFAA,AEAKO,CFAJD,KEAD,CAAYE,GFAvB,CAAsBC,AEAX,KFAX,GAA8B,YAAW;AACrC,AEAI,KAFD,EFEEP,IEAK,CFAV,CAAWO,KAAX;AACH,AEAU,CFFX,UEEgBF,MAAL,CAAYE,KAAZ;AACH;AFCRT,AEAI,WFAO,CAACM,SAAZ,CAAsBS,UAAtB,GAAmC,YAAU;AACzC,MAAG,KAAKb,KAAL,CAAWc,MAAd,EAAqB;AACjB,AEpCQ,SFoCHR,IAAL;AACH,GAFD,MAEO;AACP,SAAKC,KAAL,CEDWW;AFEV;AACJ,CAND;;AAQApB,WAAW,CAACM,SAAZ,CAAsBW,IAAtB,GAA6B,YAAW;AACpC,OAAKf,KAAL,CAAWQ,KAAX,GAAmB,IAAnB;AAEH,CAHD;;AAKAV,WAAW,CAACM,SAAZ,CAAsBY,MAAtB,GAA+B,YAAW;AACtC,OAAKhB,KAAL,CAAWQ,KAAX,GAAmB,KAAnB;AACH,CAFD;AAIA;;;;;;;;;;;eAUeV","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["\nfunction MediaPlayer(config) {\n    this.media = config.el;\n    this.plugins = config.plugins || [];\n\n    this._initPlugins();\n}\n\nMediaPlayer.prototype._initPlugins = function (){\n    const player = {\n        play: () => this.play(),\n        pause: () => this.pause(),\n        media: this.media,\n       get muted() {\n           return this.media.muted;\n       },\n        set muted(value) {\n            this.media.muted = value;\n        },\n    };\n\n    this.plugins.forEach(plugin => {\n        plugin.run(player);\n    })\n}\n\nMediaPlayer.prototype.play = function() {\n    this.media.play();\n};\n\nMediaPlayer.prototype.pause = function() {\n    this.media.pause();\n};\n\nMediaPlayer.prototype.togglePlay = function(){\n    if(this.media.paused){\n        this.play();\n    } else {\n    this.pause();\n    }\n};\n\nMediaPlayer.prototype.mute = function (){\n    this.media.muted = true;\n    \n}\n  \nMediaPlayer.prototype.unmute = function (){\n    this.media.muted = false;\n};\n\n/*MediaPlayer.prototype.toggleMute = function (){\n    \n    if(this.media.mute){\n        this.unmute();\n        console.log('si llega')\n    } else {\n        this.mute();\n    }\n};*/\n\nexport default MediaPlayer;","function AutoPlay() {}\n  AutoPlay.prototype.run = function (player) {\n    if(!player.muted) {\n      player.muted = true;\n    }\n    player.play();\n  };\n\n  export default AutoPlay;\n","class AutoPause {\n    constructor() {\n        this.threshold = 0.25\n        this.handleIntersection = this.handleIntersection.bind(this);\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n    }\n   run(player) {\n       this.player = player;\n       const observer = new IntersectionObserver(this.handleIntersection, {\n        threshold: this.threshold,\n       })\n\n       observer.observe(this.player.media);\n       document.addEventListener('visibilitychange', this.handleVisibilityChange)\n   }\n\n   handleIntersection(entries) {\n       const entry = entries[0];\n       const isVisible = entry.intersectionRatio >= this.threshold;\n     if(isVisible) {\n        this.player.play()\n     } else {\n        this.player.pause()\n     }\n            \n   }\n\n   handleVisibilityChange(){\n       const isVisible = document.visibilityState === \"visible\"\n       if(isVisible){\n           this.player.play()\n       } else {\n           this.player.pause()\n       }\n   }\n}\n\nexport default AutoPause;","import MediaPlayer from './MediaPlayer.js';\nimport AutoPlay from './plugins/AutoPlay.js';\nimport AutoPause from './plugins/AutoPause.js';\n\nconst video = document.querySelector(\"video\")\nconst player = new MediaPlayer({\n   el: video, \n   plugins: [new AutoPlay(), new AutoPause()],\n   });\n\nconst button = document.querySelector('#playBtn')\nbutton.onclick = () => player.togglePlay();\n\nconst muteBtn = document.querySelector('#muteBtn')\nmuteBtn.onclick = () => {\n    if (player.media.muted) {\n        player.unmute();\n      } else {\n        player.mute();\n      }\n}\n\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker.register('/sw.js').catch(error => {\n    console.log(error.message);\n  });\n}"]}