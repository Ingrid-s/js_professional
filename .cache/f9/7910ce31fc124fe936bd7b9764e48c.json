{"id":"ejercicios/closures.html","dependencies":[{"name":"D:\\msagrerom\\Desktop\\p_video\\package.json","includedInParent":true,"mtime":1569009300981}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n    <title>Document</title>\r\n</head>\r\n<body>\r\n    <div>\r\n        <h3>Closures</h3>\r\n            <p>\r\n                    Son funciones que regresan una función o un objeto con funciones que mantienen las variables que fueron declaras fuera de su scope.\r\n            </p>\r\n            <p>Los closures nos sirven para tener algo parecido a variables privadas, característica que no tiene JavaScript por default. Es decir encapsulan variables que no pueden ser modificadas directamente por otros objetos, sólo por funciones pertenecientes al mismo.</p>   \r\n    </div>\r\n    <script>//Closures\n//printColor\n//IIFE Inmediatly Invoked function expression\n(function () {\n  let color = 'green';\n\n  function printColor() {\n    console.log(color);\n  }\n\n  printColor();\n})(); // Funciones que regresan funciones\n\n\nfunction makeColorPrinter(color) {\n  let colorMessage = `The color is ${color}`;\n  return function () {\n    console.log(colorMessage);\n  };\n}\n\nlet greenColorPrinter = makeColorPrinter('green');\nconsole.log(greenColorPrinter()); //Variables privadas\n//const counter = {\n//  count: 3, \n//};\n\nfunction makeCounter(n) {\n  let count = n;\n  return {\n    increase: function () {\n      count = count + 1;\n    },\n    decrease: function () {\n      count = count - 1;\n    },\n    getCount: function () {\n      return count;\n    }\n  };\n}\n\nlet counter = makeCounter(7);\nconsole.log('The count is', counter.getCount());\ncounter.increase();\nconsole.log('the count is', counter.getCount());\ncounter.decrease();\ncounter.decrease();\ncounter.decrease();\ncounter.decrease();\nconsole.log('The count is:', counter.getCount());</script>\r\n</body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"42b13fb4163bad0f80afaac31f567247","cacheData":{"env":{}}}