{"id":"ejercicios/eventLoop.html","dependencies":[],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n    <title>Event Loop</title>\r\n</head>\r\n<body>\r\n    <div>\r\n        <h3>Event Loop</h3>\r\n        <p>Es el responsable de dar la apariencia de que JS es multi-hilo, cunado en realidad no lo es.</p>\r\n        <p>Java Script se organiza usando 2 estructuras de datos:</p>\r\n        <h3>Stack</h3>\r\n        <p>El stack es la estructura de datos que lleva registro en que parte del programa estamos<br>\r\n            es como un contenedor, que almacena las llamadas a funciones</p>\r\n        <p>Mediante Push, metemos funciones al stack, para sacarlas el método es Pop.</p>\r\n        <p>El stack apunta al scope y guarda esa información. En el stack lo primero que entra es lo último en salir (FILO)</p>\r\n        <h3>Memory Heap</h3>\r\n        <p>El memory Heap, es una estructura un poco menos organizada dónde se almacenan información sobre las variables, el scope etc.</p>\r\n\r\n\r\n        <h3>Task Queue</h3>\r\n        <p>Cuando hacemos peticiones y asincronísmo, estas funciones que van a pedir datos a alagún lugar de internet y volverán algún día con la respuesta ... <br>\r\n        van a parar a la cola de tareas o task Queue (FIF0), dónde son agendadas, cuándo transcurre el tiempo de una función setTimeOut, esta pasa del Scheduled Tasks al Task Queue. \r\n        <br>\r\n        El event Loop, esta escuchando constantemente entre el stack y el task Queue, ¿hay tareas en la fila de tareas?, Si las hay... ¿esta vacio el stack? si... Sólo entonces el event Loop mueve la tarea del task queue al stack para que sean ejecutadas.\r\n        </p>\r\n        <p>Las promesas, que por definición son asincronas también.tienen otro elemento intemeio al scheduled task, y el task Queue, este se llama Microtaks Queue.\r\n            </p><h3>La cola de  Microtareas</h3>\r\n            <p>Microtacks Queue, FIFO, que van a tener preferencia sobre el task Queue y el cuánto el stack este vacío, <br>\r\n                El event Loop, tomará del microtask Queue la primera promesa en entrar y se la pasará al stack, aún cuándo el task Queue tenga tareas formadas.\r\n            </p>\r\n        <p></p>\r\n        \r\n    </div>\r\n</body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"e488134bb22ddaade193d75610057253","cacheData":{}}